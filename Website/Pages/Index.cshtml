@page
@using Menu = BleakwindBuffet.Data.Menu;
@using IOrderItem = BleakwindBuffet.Data.IOrderItem;
@using BleakwindBuffet.Data.Sides;
@using BleakwindBuffet.Data.Drinks;
@using BleakwindBuffet.Data.Enums;

@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<style>
    .menu-item-grid {
        display: grid;
        grid-gap: 5px;
        grid-template-columns: auto auto auto;
        padding: 3px;
    }

    .menu-item {
        display: grid;
        grid-gap: 5px;
        grid-template-columns: auto auto;
        padding: 3px;
    }

    .filters {
        display: grid;
        grid-gap: 5px;
        grid-template-columns: auto auto auto auto;
        padding: 3px;
    }

    .description {
        padding: 4px;
        font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        font-style: italic;
        font-size: 10px;
    }

    .clearfix {
        clear: both;
    }

    .menu-item-flex {
        display: flex;
        flex-direction: row;
        grid-gap: 5px;
        grid-template-columns: auto auto auto;
        padding: 3px;
    }
</style>


<form id="menu-database">
    <div id="results">
        <h1 class="display-4">Welcome to Bleakwind Buffet!</h1>
        <p>
            We at Bleakwind Buffet are proud to bring you authentic fantasy meals straight from the world of Skyrim.
            Shake the blood off your sword and sake your thirst with one of our old-fashioned sailor sodas.
            Hack into a Smokehouse Skeleton with your dagger. Or vanquish the the mighty Thalmor Triple Burger!
            You’ve had a hard adventure and earned your loot, so spend it with us!
        </p>
        <div class="filters">
            <div id="search">
                <input type="text" name="SearchTerms" value="@Model.SearchTerms" />
                <input type="submit" value="Filter Menu Items">
            </div>
            <div>
                <h4>Menu Item Types</h4>
                @foreach (String itemType in Menu.itemTypes)
                {
                    <label>
                        <input type="checkbox" name="itemTypes" value="@itemType" />
                        @itemType
                    </label>
                }
            </div>
            <div>
                <h4>Calories Range</h4>
                <div>
                    Between
                    <input name="calMin" type="number" min="0" max="1000" step="1" placeholder="min" />
                    and
                    <input name="calMax" type="number" min="0" max="100" step="1" placeholder="max" />
                </div>
            </div>
            <div>
                <h4>Price Range</h4>
                <div>
                    Between
                    <input name="priceMin" type="number" min="0" max="100" step="1" placeholder="min" />
                    and
                    <input name="priceMax" type="number" min="0" max="10" step="1" placeholder="max" />
                </div>
            </div>
        </div>

        @{
            IEnumerable<IOrderItem> entrees = Menu.Entrees();
            IEnumerable<IOrderItem> sides = Menu.Sides();
            IEnumerable<IOrderItem> drinks = Menu.Drinks();
        }

        <ul class="menu-item-flex">
            <li>
                <h2>Entrees</h2>
                <ul>
                    @foreach (IOrderItem item in entrees)
                    {
                        foreach (IOrderItem check in Model.MenuItems)
                        {
                            if (check.ToString() == item.ToString())
                            {
                                <li>
                                    <h3>@item.ToString()</h3>
                                    <div class="menu-item">
                                        <div>$@item.Price</div>
                                        <div>@item.Calories Calories</div>
                                    </div>
                                    <div class="description">@item.Description</div>
                                </li>
                            }
                        }
                    }
                </ul>
            </li>
            <li>
                <h2>Sides</h2>
                <ul>
                    @foreach (IOrderItem item in sides)
                    {
                        foreach (IOrderItem check in Model.MenuItems)
                        {
                            if (check.ToString() == item.ToString())
                            {
                                Side side = (Side)item;
                                @if (side.Size == BleakwindBuffet.Data.Enums.Size.Small)
                                {
                                    <li>
                                        <h3>@side.ToString().Replace("Small ", "")</h3>
                                        <div class="menu-item-grid">
                                            @foreach (Size s in Enum.GetValues(typeof(Size)))
                                            {
                                                side.Size = s;
                                                <div>@s:</div>
                                                <div>$@side.Price</div>
                                                <div>@side.Calories Calories</div>
                                            }
                                        </div>
                                        <div class="description">@item.Description</div>
                                    </li>
                                }
                            }
                        }
                    }
                </ul>
            </li>
            <li>
                <h2>Drinks</h2>
                <ul>
                    @foreach (IOrderItem item in drinks)
                    {
                        foreach (IOrderItem check in Model.MenuItems)
                        {
                            if (check.ToString() == item.ToString())
                            {
                                Drink drink = (Drink)item;
                                if (drink.Size == BleakwindBuffet.Data.Enums.Size.Small)
                                {
                                    if (drink.ToString().Contains("Sailor"))
                                    {
                                        SailorSoda soda = (SailorSoda)drink;
                                        if (soda.Flavor == BleakwindBuffet.Data.Enums.SodaFlavor.Blackberry)
                                        {
                                            <li>
                                                <h3>@drink.ToString().Replace("Small Blackberry ", "")</h3>
                                                <div>
                                                    <div>$@drink.Price</div>
                                                    <div>@drink.Calories Calories</div>
                                                    <div class="menu-item-grid">
                                                        @foreach (Size s in Enum.GetValues(typeof(Size)))
                                                        {
                                                            drink.Size = s;
                                                            <div>@s:</div>
                                                            <div>$@drink.Price</div>
                                                            <div>@drink.Calories Calories</div>
                                                        }
                                                    </div>
                                                </div>
                                                <div>Flavors:</div>
                                                <ol class="menu-item-grid">
                                                    @foreach (SodaFlavor flav in Enum.GetValues(typeof(SodaFlavor)))
                                                    {
                                                        <li>@flav</li>
                                                    }
                                                </ol>
                                                <div class="description">@item.Description</div>
                                            </li>
                                        }
                                    }
                                    else
                                    {
                                        <li>
                                            <h3>@drink.ToString().Replace("Small ", "")</h3>
                                            <div class="menu-item-grid">
                                                @foreach (Size s in Enum.GetValues(typeof(Size)))
                                                {
                                                    drink.Size = s;
                                                    <div>@s:</div>
                                                    <div>$@drink.Price</div>
                                                    <div>@drink.Calories Calories</div>
                                                }
                                            </div>
                                            <div class="description">@item.Description</div>
                                        </li>
                                    }
                                }
                            }
                        }
                    }
                </ul>
            </li>
        </ul>
        <div class="clearfix" />
        <p>
            Any entree, side, and drink can be combined in a combo with a $1 discount!
        </p>
    </div>
</form>